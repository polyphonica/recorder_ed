# Generated by Django 5.2.7 on 2025-10-21 14:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkshopCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='book-open', max_length=50)),
                ('color', models.CharField(default='primary', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Workshop Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(help_text='Brief summary for listings', max_length=300)),
                ('learning_objectives', models.TextField(help_text='What students will learn')),
                ('prerequisites', models.TextField(blank=True, help_text='Required knowledge or skills')),
                ('materials_needed', models.TextField(blank=True, help_text='Materials students should have')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('estimated_duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='workshops/images/')),
                ('promo_video_url', models.URLField(blank=True, help_text='YouTube or Vimeo URL')),
                ('is_free', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_registrations', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshops', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshops.workshopcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkshopSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('timezone_name', models.CharField(default='UTC', max_length=50)),
                ('max_participants', models.PositiveIntegerField(default=20)),
                ('current_registrations', models.PositiveIntegerField(default=0)),
                ('waitlist_enabled', models.BooleanField(default=True)),
                ('session_notes', models.TextField(blank=True, help_text='Special notes for this session')),
                ('meeting_url', models.URLField(blank=True, help_text='Zoom, Meet, or other video platform URL')),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('meeting_password', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('recording_url', models.URLField(blank=True)),
                ('recording_available_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='workshops.workshop')),
            ],
            options={
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='WorkshopRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('waitlisted', 'Waitlisted'), ('attended', 'Attended'), ('no_show', 'No Show'), ('cancelled', 'Cancelled')], default='registered', max_length=20)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('experience_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('expectations', models.TextField(blank=True, help_text='What do you hope to learn?')),
                ('special_requirements', models.TextField(blank=True, help_text='Accessibility or other needs')),
                ('attended', models.BooleanField(default=False)),
                ('rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshop_registrations', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='workshops.workshopsession')),
            ],
            options={
                'ordering': ['registration_date'],
            },
        ),
        migrations.CreateModel(
            name='WorkshopMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('material_type', models.CharField(choices=[('slides', 'Presentation Slides'), ('handout', 'Handout/Worksheet'), ('resource', 'Additional Resource'), ('recording', 'Session Recording'), ('transcript', 'Transcript'), ('code', 'Code Examples'), ('link', 'External Link')], max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='workshops/materials/')),
                ('external_url', models.URLField(blank=True)),
                ('access_timing', models.CharField(choices=[('pre', 'Before Session'), ('during', 'During Session'), ('post', 'After Session'), ('always', 'Always Available')], default='always', max_length=20)),
                ('is_downloadable', models.BooleanField(default=True)),
                ('requires_registration', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='workshops.workshop')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='workshops.workshopsession')),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
        migrations.AddIndex(
            model_name='workshop',
            index=models.Index(fields=['status', 'is_featured'], name='workshops_w_status_fa93d0_idx'),
        ),
        migrations.AddIndex(
            model_name='workshop',
            index=models.Index(fields=['category', 'status'], name='workshops_w_categor_2172af_idx'),
        ),
        migrations.AddIndex(
            model_name='workshop',
            index=models.Index(fields=['instructor', 'status'], name='workshops_w_instruc_682e75_idx'),
        ),
        migrations.AddIndex(
            model_name='workshopsession',
            index=models.Index(fields=['workshop', 'start_datetime'], name='workshops_w_worksho_954f54_idx'),
        ),
        migrations.AddIndex(
            model_name='workshopsession',
            index=models.Index(fields=['start_datetime', 'is_active'], name='workshops_w_start_d_42c2fb_idx'),
        ),
        migrations.AddIndex(
            model_name='workshopregistration',
            index=models.Index(fields=['session', 'status'], name='workshops_w_session_d6c21f_idx'),
        ),
        migrations.AddIndex(
            model_name='workshopregistration',
            index=models.Index(fields=['student', 'status'], name='workshops_w_student_140fcb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workshopregistration',
            unique_together={('session', 'student')},
        ),
        migrations.AddIndex(
            model_name='workshopmaterial',
            index=models.Index(fields=['workshop', 'access_timing'], name='workshops_w_worksho_7e2d35_idx'),
        ),
        migrations.AddIndex(
            model_name='workshopmaterial',
            index=models.Index(fields=['session', 'access_timing'], name='workshops_w_session_86b12e_idx'),
        ),
    ]
