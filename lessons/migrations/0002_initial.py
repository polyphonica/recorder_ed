# Generated by Django 5.2.7 on 2025-10-24 13:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lessons', '0001_initial'),
        ('private_teaching', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='lesson',
            name='lesson_request',
            field=models.ForeignKey(help_text='The lesson request this lesson belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='private_teaching.lessonrequest'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='student',
            field=models.ForeignKey(help_text='Student taking this lesson', on_delete=django.db.models.deletion.CASCADE, related_name='student_lessons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='private_teaching.subject'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(help_text='Teacher giving this lesson (auto-populated from subject)', on_delete=django.db.models.deletion.CASCADE, related_name='teacher_lessons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson'),
        ),
        migrations.AddField(
            model_name='lessonattachedurl',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson'),
        ),
        migrations.AddField(
            model_name='lessonorder',
            name='lessons',
            field=models.ManyToManyField(to='lessons.lesson'),
        ),
    ]
