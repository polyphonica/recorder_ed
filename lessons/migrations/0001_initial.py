# Generated by Django 5.2.7 on 2025-10-24 13:54

import ckeditor_uploader.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('document', models.FileField(upload_to='lesson_documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration_in_minutes', models.CharField(choices=[('30', '30'), ('60', '60'), ('90', '90')], default='60', max_length=7)),
                ('lesson_date', models.DateField()),
                ('lesson_time', models.TimeField()),
                ('fee', models.FloatField(blank=True, help_text='Calculated lesson price', null=True)),
                ('location', models.CharField(choices=[('Online', 'Online'), ('Onsite', 'Onsite')], default='Online', max_length=20)),
                ('attendance', models.CharField(choices=[('Attended', 'Attended'), ('No-show', 'No-show'), ('Legal-Cancel', 'Legal-Cancel'), ('Illegal-Cancel', 'Illegal-Cancel')], default='Attended', max_length=20)),
                ('zoom_link', models.URLField(blank=True, default='https://us05web.zoom.us/j/7602824033?pwd=bjQ3Vi9ZSnNiY1lVV0RxeWszc25TZz09', null=True)),
                ('lesson_content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('teacher_notes', models.TextField(blank=True, null=True)),
                ('homework', models.TextField(blank=True, null=True)),
                ('private_note', models.TextField(blank=True, help_text='Private notes not visible to students', null=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Assigned', 'Assigned')], default='Draft', max_length=20)),
                ('approved_status', models.CharField(choices=[('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('Pending', 'Pending')], default='Pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('Not Paid', 'Not Paid'), ('Paid', 'Paid'), ('Failed', 'Failed'), ('Payment In Process', 'Payment In Process')], default='Not Paid', max_length=20)),
                ('in_cart', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag for rejected lessons')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-lesson_date'],
            },
        ),
        migrations.CreateModel(
            name='LessonAttachedUrl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(choices=[('NONE', 'NONE'), ('Paid', 'Paid'), ('Failed', 'Failed'), ('Payment In Process', 'Payment In Process')], default='NONE', max_length=20)),
                ('transaction_id', models.CharField(max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
    ]
